<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Herd7 on Michael Shalitin</title>
    <link>https://smichaelshal.github.io/he/tags/herd7/</link>
    <description>Recent content in Herd7 on Michael Shalitin</description>
    <generator>Hugo</generator>
    <language>he</language>
    <lastBuildDate>Fri, 25 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://smichaelshal.github.io/he/tags/herd7/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Herd7</title>
      <link>https://smichaelshal.github.io/he/posts/models/herd7/</link>
      <pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://smichaelshal.github.io/he/posts/models/herd7/</guid>
      <description>&lt;h2 id=&#34;מבוא&#34;&gt;מבוא&lt;/h2&gt;&#xA;&lt;p&gt;אחת מהשיטות לפורמליזציה של מודל זיכרון היא ליצור תיאור מופשט שמתאר את האופן שבו מערכת פועלת בצורה פנימית. לאחר מכן, ניתן למנות את כל התוצאות האפשריות שנובעות מהפעולה המופשטת הזו. שיטה נוספת היא להגדיר את האילוצים שמטיל מודל הזיכרון בעזרת אקסיומות לוגיות, ולמיין את כל התוצאות האפשריות שמתאימות לאילוצים הללו, הכלי herd פועל לפי הגישה הזו.&lt;/p&gt;&#xA;&lt;p&gt;הכלי herd7 נועד לבדוק האם ביצועי זיכרון מסוימים, כולל תרחישים לא רצויים, יכולים להתרחש בתוכניות מקבילות בהתאם למודל זיכרון מוגדר. חשוב לציין כי herd7 עצמו אינו מתעסק ישירות בדרך שבה תוכניות רצות בפועל; הוא מתמקד אך ורק באימות התאמת הביצועים למודל הזיכרון שניתן לו.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Base Formal</title>
      <link>https://smichaelshal.github.io/he/posts/models/base-formal/</link>
      <pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://smichaelshal.github.io/he/posts/models/base-formal/</guid>
      <description>&lt;h2 id=&#34;יחסי-סדר&#34;&gt;יחסי סדר&lt;/h2&gt;&#xA;&lt;p&gt;מודלי זיכרון עוסקים בקביעת סדר, לרוב סדר זמני שבו אירועים מתרחשים, אך לא בהכרח רק בכך. לדוגמה, ניתן להתייחס גם לסדר ההוראות בקוד המקור של תוכנית. המודל SC מניח כי המעבדים מבצעים את ההוראות באותו סדר שבו הן מופיעות בקוד המקור, דבר שמדגיש את חשיבות הסדר. בנוסף לכך, הסדר ממלא תפקיד מרכזי במודלי זיכרון שונים.&lt;/p&gt;&#xA;&lt;p&gt;רעיון מקביל לסדר הוא הרעיון של מחזורים (cycle) - סידור אירועים פוסל מחזורים, שכן לא ניתן לסדר אירועים כך שאירוע X יופיע לפני Y, אירוע Y לפני Z, ואירוע Z יופיע לפני X, שכן זה יגרום לכך ש-X יופיע לפני עצמו, מה שאינו אפשרי.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
