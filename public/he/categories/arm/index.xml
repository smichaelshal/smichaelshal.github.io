<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arm on Michael Shalitin</title>
    <link>https://smichaelshal.github.io/he/categories/arm/</link>
    <description>Recent content in Arm on Michael Shalitin</description>
    <generator>Hugo</generator>
    <language>he</language>
    <lastBuildDate>Mon, 07 Oct 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://smichaelshal.github.io/he/categories/arm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Early Write Acknowledgment</title>
      <link>https://smichaelshal.github.io/he/posts/arm/early-write-acknowledgment/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://smichaelshal.github.io/he/posts/arm/early-write-acknowledgment/</guid>
      <description>&lt;h2 id=&#34;מבוא&#34;&gt;מבוא&lt;/h2&gt;&#xA;&lt;p&gt;בדרך כלל, אנו מצפים שבקשות invalidate יאושרו רק לאחר שכל העותקים הישנים של ה-cache line יוסרו מהיררכיית ה-cache של המעבד. בכך, האישור מעיד על כך שהכתיבה הסתיימה במלואה ביחס למעבד מסוים. עם זאת, כדי לצמצם את ההשהיה שנוצרת במהלך אישור כתיבות, במיוחד במערכות עם היררכיות cache עמוקות, נעשה שימוש באופטימיזציה נפוצה. אופטימיזציה זו מאשרת את בקשת ה-invalidate ברגע שהיא נכנסת לתור היררכיית ה-cache, עוד לפני שכל העותקים הישנים נמחקים בפועל.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Domains</title>
      <link>https://smichaelshal.github.io/he/posts/arm/domains/</link>
      <pubDate>Sat, 05 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://smichaelshal.github.io/he/posts/arm/domains/</guid>
      <description>&lt;h2 id=&#34;מבוא&#34;&gt;מבוא&lt;/h2&gt;&#xA;&lt;p&gt;הגישה לנתוני זיכרון עלולה להיות איטית יותר ולדרוש יותר כוח במערכות שבהן יש חומרת cache קוהרנטית, בהשוואה למערכות ללא מנגנון זה. כדי לצמצם את העלות הזו, נהוג לשמור על קוהרנטיות רק בין חלק מהרכיבים, תוך דאגה שהם ממוקמים קרוב פיזית זה לזה בתוך המעבד. לשם כך, ארכיטקטורת ARM מחלקת את המערכת לדומיינים, מה שמאפשר להגביל את הדרישה לקוהרנטיות רק לאזורים שבהם היא באמת נחוצה.&lt;/p&gt;&#xA;&lt;p&gt;המורכבות של פרוטוקולי קוהרנטיות cache משתנה בהתאם לחלקים של המערכת שבהם יש לשמור על סנכרון. בהתאם למבנה המערכת, פרוטוקול קוהרנטיות יכול להיות פשוט או מסובך.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
